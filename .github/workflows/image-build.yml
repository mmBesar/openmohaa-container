name: Build, Push & Publish Multi-Arch

on:
  push:
    branches: [ main, master ]
    tags:    ['v*']
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/image-build.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  # 1) build per-arch slices
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - { platform: linux/amd64, tag: amd64 }
          - { platform: linux/arm64, tag: arm64 }
          - { platform: linux/arm/v7, tag: armhf }
    outputs:
      image-name: ${{ steps.vars.outputs.image-name }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Compute image name
        id: vars
        run: |
          IMG="${{ github.repository_owner | lower }}/openmohaa-container"
          echo "image-name=$IMG" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push ${{ matrix.arch.tag }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.arch.platform }}
          push: true
          tags: |
            ghcr.io/${{ steps.vars.outputs.image-name }}:latest-${{ matrix.arch.tag }}
            ghcr.io/${{ steps.vars.outputs.image-name }}:${{ github.ref_name }}-{{ matrix.arch.tag }}

  # 2) assemble the union manifest
  manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create & push multi-arch manifest
        run: |
          IMG=${{ needs.build.outputs.image-name }}

          # latest
          docker buildx imagetools create \
            --tag ghcr.io/$IMG:latest \
            ghcr.io/$IMG:latest-amd64 \
            ghcr.io/$IMG:latest-arm64 \
            ghcr.io/$IMG:latest-armhf

          # semver tag (e.g. v1.2.3)
          docker buildx imagetools create \
            --tag ghcr.io/$IMG:${{ github.ref_name }} \
            ghcr.io/$IMG:${{ github.ref_name }}-amd64 \
            ghcr.io/$IMG:${{ github.ref_name }}-arm64 \
            ghcr.io/$IMG:${{ github.ref_name }}-armhf
