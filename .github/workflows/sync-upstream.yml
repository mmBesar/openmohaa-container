name: Sync Upstream Source

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync-upstream:
    name: Sync upstream to local upstream branch
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Add upstream remote and fetch
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git remote add upstream https://github.com/openmoh/openmohaa.git
          git tag -l | xargs -r git tag -d
          git fetch upstream --tags --force

      - name: Reset upstream branch and preserve workflows
        run: |
          # Save your workflows
          mkdir -p /tmp/my-workflows
          cp -r .github/workflows/* /tmp/my-workflows/ 2>/dev/null || true
          
          git checkout -B upstream upstream/main
          rm -rf .github/workflows
          mkdir -p .github/workflows
          cp -r /tmp/my-workflows/* .github/workflows/ 2>/dev/null || true
          
          git add .
          git commit -m "Sync upstream, preserve local workflows" || true
          git push origin upstream --force
          
      - name: Create clean tags without upstream workflows (preserve dates)
        run: |
          mkdir -p /tmp/my-workflows
          cp -r .github/workflows/* /tmp/my-workflows/ 2>/dev/null || true
      
          for tag in $(git tag -l); do
            echo "Processing tag: $tag"
      
            # 1) Grab the original tagger date (ISO‑8601)
            orig_date=$(git for-each-ref \
              --format='%(taggerdate:iso8601)' \
              refs/tags/"$tag")
      
            # 2) Create a temporary branch from the original tag
            git checkout -B temp-"$tag" "$tag"
      
            # 3) Strip out upstream workflows, restore yours
            rm -rf .github/workflows
            mkdir -p .github/workflows
            cp -r /tmp/my-workflows/* .github/workflows/ 2>/dev/null || true
      
            # 4) Amend the tree (no change to commit message)
            git add .github/workflows
            git commit -m "Remove upstream workflows from $tag" \
              --date="$(git show -s --format=%cI "$tag")"
      
            # 5) Re‑tag as an *annotated* tag with the original date
            git tag -a "$tag" -m "Cleaned tag $tag" \
              --force \
              --date="$orig_date"
      
            # 6) Clean up
            git checkout upstream
            git branch -D temp-"$tag"
          done
      
          # 7) Push all tags (now annotated, with preserved dates)
          git push origin --tags --force

